{"version":3,"sources":["components/Form.js","components/Result.js","components/App.js","index.js"],"names":["Form","props","className","onSubmit","submit","type","value","onChange","change","placeholder","Result","weather","date","city","sunrise","day","sunset","temp","pressure","wind","err","content","sunriseTime","Date","toLocaleTimeString","sunsetTime","App","state","handleInputChange","e","setState","target","handleCitySubmit","preventDefault","API","fetch","then","response","ok","Error","json","data","toLocaleDateString","time","sys","main","speed","catch","prevState","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAgBeA,G,MAfF,SAAAC,GACT,OACI,0BAAMC,UAAU,OAAOC,SAAUF,EAAMG,QACnC,2BACIC,KAAK,OACLC,MAAOL,EAAMK,MACbC,SAAUN,EAAMO,OAChBC,YAAY,iBAGhB,sDCmBGC,EA5BA,SAAAT,GAAU,IAAD,EAEoDA,EAAMU,QAAtEC,EAFY,EAEZA,KAAMC,EAFM,EAENA,KAAMC,EAFA,EAEAA,QAASC,EAFT,EAESA,IAAKC,EAFd,EAEcA,OAAQC,EAFtB,EAEsBA,KAAMC,EAF5B,EAE4BA,SAAUC,EAFtC,EAEsCA,KAAMC,EAF5C,EAE4CA,IAC5DC,EAAU,KACd,IAAKD,GAAOP,EAAM,CACd,IAAMS,EAAc,IAAIC,KAAe,IAAVT,GAAgBU,qBACvCC,EAAa,IAAIF,KAAc,IAATP,GAAeQ,qBAE3CH,EACI,6BACI,uDAA6BR,GAC7B,+CAAqBE,EAArB,IAA2BH,GAC3B,4CAAkBK,GAClB,yCAAYK,GACZ,sCAAYG,GACZ,yCAAeP,GACf,qCAAWC,IAIvB,OACI,yBAAKjB,UAAU,UACVkB,EAAM,4BAA8BC,ICyDlCK,E,4MA1EbC,MAAQ,CACNrB,MAAO,cACPM,KAAM,GACNC,KAAM,GACNC,QAAS,GACTE,OAAQ,GACRC,KAAM,GACNC,SAAU,GACVC,KAAM,GACNC,KAAK,G,EAGPQ,kBAAoB,SAAAC,GAElB,EAAKC,SAAS,CACZxB,MAAOuB,EAAEE,OAAOzB,S,EAGpB0B,iBAAmB,SAAAH,GACjBA,EAAEI,iBACF,IAAMC,EAAG,4DAAwD,EAAKP,MAAMrB,MAAnE,wDAET6B,MAAMD,GACHE,MAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAET,MAAME,MAAM,uCAEbH,MAAK,SAAAC,GAAQ,OAAIA,EAASG,UAE1BJ,MAAK,SAAAK,GACJ,IAAM1B,GAAM,IAAIQ,MAAOmB,qBACjBC,GAAO,IAAIpB,MAAOC,qBAGxB,EAAKM,UAAS,SAAAH,GAAK,MAAK,CACtBP,KAAK,EACLL,IAAKA,EACLH,KAAM+B,EACN7B,QAAS2B,EAAKG,IAAI9B,QAClBE,OAAQyB,EAAKG,IAAI5B,OACjBC,KAAMwB,EAAKI,KAAK5B,KAChBC,SAAUuB,EAAKI,KAAK3B,SACpBC,KAAMsB,EAAKtB,KAAK2B,MAChBjC,KAAMc,EAAMrB,aAKfyC,OAAM,SAAA3B,GACL,EAAKU,UAAS,SAAAkB,GAAS,MAAK,CAC1B5B,KAAK,EACLP,KAAMmC,EAAU1C,c,uDAQtB,OACE,yBAAKJ,UAAU,OACb,kBAAC,EAAD,CACEI,MAAO2C,KAAKtB,MAAMrB,MAClBE,OAAQyC,KAAKrB,kBACbxB,OAAQ6C,KAAKjB,mBAEf,kBAAC,EAAD,CAAQrB,QAASsC,KAAKtB,a,GAtEZuB,aCAlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.e3c6aebe.chunk.js","sourcesContent":["import React from 'react';\r\nconst Form = props => {\r\n    return (\r\n        <form className=\"form\" onSubmit={props.submit}>\r\n            <input\r\n                type=\"text\"\r\n                value={props.value}\r\n                onChange={props.change}\r\n                placeholder=\"Wpisz miasto\"\r\n            />\r\n\r\n            <button>Wyszukaj miasto</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nconst Result = props => {\r\n\r\n    const { date, city, sunrise, day, sunset, temp, pressure, wind, err } = props.weather;\r\n    let content = null;\r\n    if (!err && city) {\r\n        const sunriseTime = new Date(sunrise * 1000).toLocaleTimeString();\r\n        const sunsetTime = new Date(sunset * 1000).toLocaleTimeString();\r\n\r\n        content = (\r\n            <div>\r\n                <h3>Wyszukiwanie dla miasta {city}</h3>\r\n                <h4>Dzien i godzina {day} {date}</h4>\r\n                <h4>Temperatura: {temp}</h4>\r\n                <h4>Wschód {sunriseTime}</h4>\r\n                <h4>Zachod {sunsetTime}</h4>\r\n                <h4>Cisnienie {pressure}</h4>\r\n                <h4>wiatr {wind}</h4>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"result\">\r\n            {err ? \"Takie miasto nie istnieje\" : content}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Result;","import React, { Component } from 'react';\nimport './App.css';\nimport Form from './Form';\nimport Result from './Result';\n\nclass App extends Component {\n\n  state = {\n    value: \"pępowo\",\n    date: \"\",\n    city: \"\",\n    sunrise: \"\",\n    sunset: \"\",\n    temp: \"\",\n    pressure: \"\",\n    wind: \"\",\n    err: false\n  }\n\n  handleInputChange = e => {\n\n    this.setState({\n      value: e.target.value\n    })\n  }\n  handleCitySubmit = e => {\n    e.preventDefault()\n    const API = `https://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&appid=3d939e44753294d434c3b344b67cf1c2&units=metric`;\n\n    fetch(API)\n      .then(response => {\n        if (response.ok) {\n          return response\n        }\n        throw Error(\"Problem, nie udało się\")\n      })\n      .then(response => response.json())\n\n      .then(data => {\n        const day = new Date().toLocaleDateString()\n        const time = new Date().toLocaleTimeString()\n\n\n        this.setState(state => ({\n          err: false,\n          day: day,\n          date: time,\n          sunrise: data.sys.sunrise,\n          sunset: data.sys.sunset,\n          temp: data.main.temp,\n          pressure: data.main.pressure,\n          wind: data.wind.speed,\n          city: state.value\n        }))\n      })\n\n\n      .catch(err => {\n        this.setState(prevState => ({\n          err: true,\n          city: prevState.value\n        }))\n      })\n\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\" >\n        <Form\n          value={this.state.value}\n          change={this.handleInputChange}\n          submit={this.handleCitySubmit}\n        />\n        <Result weather={this.state} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}